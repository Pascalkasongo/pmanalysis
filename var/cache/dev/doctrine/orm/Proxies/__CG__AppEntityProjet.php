<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Projet extends \App\Entity\Projet implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'date_from', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'date_up', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'cout', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'domaine', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'taches', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'client', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'factures', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'sprints'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'nom', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'date_from', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'date_up', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'cout', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'domaine', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'taches', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'client', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'factures', '' . "\0" . 'App\\Entity\\Projet' . "\0" . 'sprints'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Projet $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(?\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(?\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNom(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom(string $nom): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(string $description): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFrom(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFrom', []);

        return parent::getDateFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFrom(\DateTimeInterface $date_from): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFrom', [$date_from]);

        return parent::setDateFrom($date_from);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateUp(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateUp', []);

        return parent::getDateUp();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateUp(\DateTimeInterface $date_up): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateUp', [$date_up]);

        return parent::setDateUp($date_up);
    }

    /**
     * {@inheritDoc}
     */
    public function getCout(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCout', []);

        return parent::getCout();
    }

    /**
     * {@inheritDoc}
     */
    public function setCout(int $cout): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCout', [$cout]);

        return parent::setCout($cout);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomaine(): ?\App\Entity\Domaine
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomaine', []);

        return parent::getDomaine();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomaine(?\App\Entity\Domaine $domaine): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomaine', [$domaine]);

        return parent::setDomaine($domaine);
    }

    /**
     * {@inheritDoc}
     */
    public function getTaches(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaches', []);

        return parent::getTaches();
    }

    /**
     * {@inheritDoc}
     */
    public function addTach(\App\Entity\Tache $tach): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTach', [$tach]);

        return parent::addTach($tach);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTach(\App\Entity\Tache $tach): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTach', [$tach]);

        return parent::removeTach($tach);
    }

    /**
     * {@inheritDoc}
     */
    public function getClient(): ?\App\Entity\Client
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClient', []);

        return parent::getClient();
    }

    /**
     * {@inheritDoc}
     */
    public function setClient(?\App\Entity\Client $client): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClient', [$client]);

        return parent::setClient($client);
    }

    /**
     * {@inheritDoc}
     */
    public function getFactures(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFactures', []);

        return parent::getFactures();
    }

    /**
     * {@inheritDoc}
     */
    public function addFacture(\App\Entity\Facture $facture): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFacture', [$facture]);

        return parent::addFacture($facture);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFacture(\App\Entity\Facture $facture): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFacture', [$facture]);

        return parent::removeFacture($facture);
    }

    /**
     * {@inheritDoc}
     */
    public function getSprints(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSprints', []);

        return parent::getSprints();
    }

    /**
     * {@inheritDoc}
     */
    public function addSprint(\App\Entity\Sprint $sprint): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSprint', [$sprint]);

        return parent::addSprint($sprint);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSprint(\App\Entity\Sprint $sprint): static
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSprint', [$sprint]);

        return parent::removeSprint($sprint);
    }

}
